<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.crm.mapper.RoleMapper" >
  <resultMap id="BaseResultMap" type="com._520it.crm.domain.Role" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="sn" property="sn" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />

    <collection property="permissions" ofType="Permission">
      <id column="id" property="id"/>
      <id column="name" property="name"/>
    </collection>

  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <!--删除角色和权限之间中间表的关系-->
  <delete id="deleteRelation">
    DELETE FROM role_permission WHERE role_id=#{id};
  </delete>

  <insert id="insert" parameterType="com._520it.crm.domain.Role" useGeneratedKeys="true" keyProperty="id" >
    insert into role (sn, name)
    values (#{sn,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR})
  </insert>
    <!--保存角色和权限之间的关系-->
  <insert id="insertRelation">
    insert into role_permission (role_id, permission_id) values (#{roleId},#{permissionId});
  </insert>

  <update id="updateByPrimaryKey" parameterType="com._520it.crm.domain.Role" >
    update role
    set sn = #{sn,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, sn, name
    from role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, sn, name
    from role
  </select>

  <sql id="base_where">
    <where>
      <if test="keyword!=null">
        AND  name like concat("%",#{keyword},"%")
      </if>
    </where>
  </sql>

    <select id="queryForCount" resultType="int">
      select count(id) from role
      <include refid="base_where"/> ;
    </select>

  <select id="queryForData" resultMap="BaseResultMap">
    select * from role
    <include refid="base_where"/>
    limit #{start},#{rows};
  </select>

  <select id="queryRoleByEmployeeId" resultType="java.lang.String">
    SELECT * from role WHERE id in
    (
      SELECT role_id  FROM employee_role WHERE employee_id = #{employeeId}
    )
  </select>

  <select id="queryRoleIdsByEmployeeId" resultType="java.lang.Long">
      select role_id from employee_role where employee_id = #{employeeId}
  </select>

</mapper>